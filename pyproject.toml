[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "haindy"
version = "0.1.0"
description = "Autonomous AI Testing Agent with multi-agent architecture"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "F. Keegan"},
]
keywords = ["testing", "automation", "ai", "multi-agent", "browser-automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
    "playwright>=1.55.0",
    "openai>=2.3.0",
    "rich>=14.2.0",
    "pydantic>=2.12.2",
    "pydantic-settings>=2.11.0",
    "python-dotenv>=1.1.1",
    "pillow>=11.3.0",
    "numpy>=2.3.3",
    "aiofiles>=25.1.0",
    "jsonlines>=4.0.0",
    "jinja2>=3.1.6",
    "tiktoken>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "black>=25.9.0",
    "isort>=7.0.0",
    "mypy>=1.18.2",
    "ruff>=0.14.0",
    "pre-commit>=4.3.0",
]

[project.scripts]
haindy = "src.main:main"

[project.urls]
Homepage = "https://github.com/fkeegan/haindy"
Repository = "https://github.com/fkeegan/haindy"
Issues = "https://github.com/fkeegan/haindy/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--strict-markers --verbose"
